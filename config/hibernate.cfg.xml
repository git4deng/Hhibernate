<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
    
		<!-- 配置连接数据库的基本信息 -->
		<property name="connection.username">root</property>
		<property name="connection.password">root</property>
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql:///david_hibernate</property>
		
		<!-- 配置 hibernate 的基本信息 -->
		<!-- hibernate 所使用的数据库方言 -->
		<!-- <property name="dialect">org.hibernate.dialect.MySQLInnoDBDialect</property> -->
		<!--注意此处：在mysql 5.0版本以后不支持 type=InnoDB 关键字，需要使用 engine=InnoDB,上面方言可能导致hibernate创建表失败！-->		
		<property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>		
		
		<!-- 执行操作时是否在控制台打印 SQL -->
		<property name="show_sql">true</property>
	
		<!-- 是否对 SQL 进行格式化 -->
		<property name="format_sql">true</property>
	
		<!-- 指定自动生成数据表的策略 -->
		<!--
			如下配置有四个取值：
			create:依据.hbm.xml创建表，每次运行都会删除已经存在的表，然后再新建，操作导致原有数据丢失
			create-drop:依据.hbm.xml创建表，但是在sessionFactory关闭后会自动删除表
			update:最常用的，依据.hbm.xml创建表，会根据.hbm.xml中的配置对已存在的表更新表结构，不会删除已有的行和列
			validate：会与数据库中存在的表进行比较，若.hbm.xml存在的列，数据库表不存在会抛出异常
		-->
		<property name="hbm2ddl.auto">update</property>
		<!-- 设为 true, 将改变 delete() 方法的运行行为: delete() 方法会把持久化对象或游离对象的 OID 设置为 null, 
		使它们变为临时对象,这样在删除过后就能执行save或则saveorupdate()方法了 -->
		<property name="hibernate.use_identifier_rollback">true</property>
		
		<!--配置c3p0数据源-->
		<!--连接池最大连接数-->
		<property name="hibernate.c3p0.max_size">10</property>	
		<!--连接池最小连接数-->	
		<property name="hibernate.c3p0.min_size">5</property>
		<!--每次生成连接的数量2个-->		
		<property name="hibernate.c3p0.acquire_increment">2</property>	
		<!--检测线程每个2秒检查一次连接超时的连接-->	
		<property name="hibernate.c3p0.idle_test_period">2000</property>
		<!-- 连接超时时间 -->		
		<property name="hibernate.c3p0.timeout">2000</property>		
		<!-- 缓存 Statement 对象的数量 -->
		<property name="hibernate.c3p0.max_statements">10</property>		
		
		<!--设定 JDBC 的 Statement 读取数据的时候每次从数据库中取出的记录条数(对MySQL无效，对oracle有效)-->
		<property name="hibernate.jdbc.fetch_size">100</property>
		
		<!--设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小(对MySQL无效，对oracle有效)-->
		<property name="hibernate.jdbc.batch_size">30</property>
		
		
		
		<!-- 指定关联的 .hbm.xml 文件 -->
		<mapping resource="com/david/hibernate/helloworld/entity/News.hbm.xml"/>
		<mapping resource="com/david/hibernate/session/entities/Article.hbm.xml"/>
	
	</session-factory>

</hibernate-configuration>
